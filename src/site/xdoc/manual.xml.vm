<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

    <properties>
        <title>IDS Plugin Interface</title>
    </properties>

    <body>

        <section name="Installation">

            <subsection name="Compatibility">This will work with an ICAT version of 4.3.0 or greater.</subsection>

            <subsection name="Prerequisites">

                <ul>
                    <li>
                        The ids distribution:
                        <a href="${repoUrl}/org/icatproject/ids.server/${project.version}/ids.server-${project.version}-distro.zip">ids.server-${project.version}-distro.zip</a>
                    </li>

                    <li>
                        A suitable deployed container (here assumed to be glassfish though tomcat should be sufficient) to support a web
                        application.
                        Testing has been carried out with Glassfish 3.1.2.
                        <a href="https://code.google.com/p/icatproject/wiki/Glassfish">Glassfish installation instructions</a>
                        are available.
                    </li>

                    <li>
                        A plugin or plugins for the storage mechanism you wish to use. Please see
                        <a href="/mvn/site/ids/plugin">plugin</a>
                        to see the interface you must
                        implement. You might also like to look at the
                        <a href="/mvn/site/ids/storage_file">file storage plugin</a>
                        as an example.
                    </li>

                    <li>
                        Python (version 2.4 to 2.7) installed on the server.
                    </li>
                </ul>
            </subsection>

            <subsection name="Summary of steps">
                <ol>
                    <li>
                        Please follow
                        <a href="http://code.google.com/p/icatproject/wiki/Installation"> the generic installation instructions</a>
                    </li>

                    <li>Check that it works.</li>
                </ol>
            </subsection>

            <subsection name="The ids.setup.properties file">

                <dl>

                    <dt>glassfish</dt>
                    <dd>is the top level of the glassfish installation. It must contain "glassfish/domains", and will be referred to here as
                        GLASSFISH_HOME as if an environment variable had been set.
                    </dd>
                    <dt>port</dt>
                    <dd>is the administration port of the chosen glassfish domain which is typically 4848.</dd>
                </dl>


            </subsection>


            <subsection name="The ids.properties file">

                <h4>General Properties</h4>

                <dl>
                    <dt> icat.url</dt>
                    <dd>
                        The url of the machine hosting the ids service. It should normally just
                        have the scheme, the hostname and the port. For
                        example:
                        <code>https://example.com:443</code>
                    </dd>

                    <dt>plugin.main.class</dt>
                    <dd>The class name of the main storage plugin. The class must be deployed in the lib/applibs directory of your domain and must be
                        packaged with all it dependencies.
                    </dd>

                    <dt>plugin.main.properties</dt>
                    <dd>Property file for the main storage plugin.</dd>

                    <dt>cache.dir</dt>
                    <dd>The location (absolute or relative to the config directory of the domain) of a directory to hold mostly zip files.</dd>

                    <dt>preparedCacheSize1024bytes</dt>
                    <dd>The maximum size to allow for prepared zip files in the cache.</dd>

                    <dt>preparedCount</dt>
                    <dd>The maximum number of failed prepareData attempts to hold in memory.</dd>

                    <dt>processQueueIntervalSeconds</dt>
                    <dd>The frequency of checking the process queue. This is used both for cleaning old information from memory and for triggering
                        movements between main and archive storage (if selected).
                    </dd>

                    <dt>rootUserNames</dt>
                    <dd>A space separated list of users allowed to make the getServiceStatus call.</dd>

                    <dt>reader</dt>
                    <dd>
                        space separated icat plugin name and credentials for a user permitted to read all data. For example:
                        <code>db username root password password.</code>
                    </dd>

                    <dt>sizeCheckIntervalSeconds</dt>
                    <dd>How frequently to check the cache sizes and clean up if necessary.</dd>

                    <dt>readOnly</dt>
                    <dd>If present disables write operations (put and delete)</dd>



                </dl>

                <h4>Properties for archive storage</h4>

                <dl>

                    <dt>plugin.archive.class</dt>
                    <dd> The class name of the archive storage plugin. The class must be deployed in the lib/applibs directory of your domain and must
                        be
                        packaged with all it dependencies.
                    </dd>

                    <dt>plugin.archive.properties</dt>
                    <dd>Property file for the archive storage plugin.</dd>

                    <dt>datasetCacheSize1024bytes</dt>
                    <dd>The maximum size to allow for dataset zip files in the cache.</dd>

                    <dt>writeDelaySeconds</dt>
                    <dd>The amount of time to wait before writing to archive storage. This exists to allow enough time for all the datafiles to be
                        added to a dataset before it is zipped and written.
                    </dd>

                    <dt>compressDatasetCache</dt>
                    <dd>If present the dataset cache and the archive storage of datasets will all be compressed. This takes longer to write and is
                        only
                        useful if you know that the data will compress well.
                    </dd>

                    <dt>tolerateWrongCompression</dt>
                    <dd>If present then a get or prepareData which is for a single dataset will make use of the dataset cache even though it does not
                        match the requested compression.
                    </dd>

                </dl>

            </subsection>

            <subsection name="Check that the ids server works">
                <p>
                    Enter a url of the form
                    <code>https://example.com:443/ids/ping</code>
                    into a web browse and it should respond:
                    <code>IdsOK</code>
                    . Note the url is that of the machine hosting the IDS followed by "/ids/ping"
                </p>

            </subsection>

        </section>
    </body>
</document>
            
